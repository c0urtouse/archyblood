local lumora = {}

function lumora:findGoal()
    local closest = {nil,math.huge}

    for i,v in pairs(workspace:GetDescendants()) do
        if v:IsA('Part') and v.Name == 'Goal' and v:FindFirstChild('Swish') then
            local distanceance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
            if distanceance < closest[2] then
                closest = {v, distanceance}
            end
        end
    end

    return closest[1], closest[2]
end

function lumora:higharc(dist)
    --print('high -> '..tostring(dist))
    -- 80
    if dist >= 57 and dist < 60 then
        return 75
    end
    if dist >= 60 and dist < 62 then
        return 70
    end
    if dist >= 62 and dist < 64 then
        return 65
    end
    if dist >= 64 and dist < 66 then
        return 59
    end
    if dist >= 66 and dist < 68 then
        return 47
    end
    -- 85
    if dist >= 68 and dist < 70 then
        return 70
    end
    if dist >= 70 and dist < 72 then
        return 65
    end
    if dist >= 72 and dist < 73 then
        return 61
    end
    return 0
end

local function v(target, dist)
    if not game.Players.LocalPlayer.Character or not game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then return target end
    local velocity = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
    local travelT = dist / 50
    local calc = velocity * travelT * 0.06
    return target + Vector3.new(calc.X, 0, calc.Z)
end

game.Players.LocalPlayer.Character.Humanoid.Jumping:Connect(function()
    local old = workspace.CurrentCamera.CFrame
    task.wait(.32)
    local goal, distance = lumora:findGoal()
    if distance >= 57 and distance < 68 then game.Players.LocalPlayer:SetAttribute('Power', 80)
            elseif distance >= 68 and distance < 74 then game.Players.LocalPlayer:SetAttribute('Power', 85) end
    workspace.CurrentCamera.CFrame = CFrame.new(game.Players.LocalPlayer.Character.Head.Position, v(goal.Position, distance) + Vector3.new(0, lumora:higharc(distance), 0))
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(
    workspace.CurrentCamera.ViewportSize.X / 2, 
    workspace.CurrentCamera.ViewportSize.Y / 2, 
    0, true, game, 0)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(
    workspace.CurrentCamera.ViewportSize.X / 2, 
    workspace.CurrentCamera.ViewportSize.Y / 2, 
    0, false, game, 0)
    task.wait(0.003)
    workspace.CurrentCamera.CFrame = old
end)
